// Code generated by MockGen. DO NOT EDIT.
// Source: baseimg.go

// Package mock is a generated GoMock package.
package mock

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockRegistryQuerier is a mock of RegistryQuerier interface
type MockRegistryQuerier struct {
	ctrl     *gomock.Controller
	recorder *MockRegistryQuerierMockRecorder
}

// MockRegistryQuerierMockRecorder is the mock recorder for MockRegistryQuerier
type MockRegistryQuerierMockRecorder struct {
	mock *MockRegistryQuerier
}

// NewMockRegistryQuerier creates a new mock instance
func NewMockRegistryQuerier(ctrl *gomock.Controller) *MockRegistryQuerier {
	mock := &MockRegistryQuerier{ctrl: ctrl}
	mock.recorder = &MockRegistryQuerierMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockRegistryQuerier) EXPECT() *MockRegistryQuerierMockRecorder {
	return m.recorder
}

// ListTags mocks base method
func (m *MockRegistryQuerier) ListTags(reference string) ([]string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListTags", reference)
	ret0, _ := ret[0].([]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListTags indicates an expected call of ListTags
func (mr *MockRegistryQuerierMockRecorder) ListTags(reference interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListTags", reflect.TypeOf((*MockRegistryQuerier)(nil).ListTags), reference)
}

// GetTag mocks base method
func (m *MockRegistryQuerier) GetTag(reference string) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTag", reference)
	ret0, _ := ret[0].(string)
	return ret0
}

// GetTag indicates an expected call of GetTag
func (mr *MockRegistryQuerierMockRecorder) GetTag(reference interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTag", reflect.TypeOf((*MockRegistryQuerier)(nil).GetTag), reference)
}

// GetName mocks base method
func (m *MockRegistryQuerier) GetName(reference string) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetName", reference)
	ret0, _ := ret[0].(string)
	return ret0
}

// GetName indicates an expected call of GetName
func (mr *MockRegistryQuerierMockRecorder) GetName(reference interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetName", reflect.TypeOf((*MockRegistryQuerier)(nil).GetName), reference)
}

// GetFullTag mocks base method
func (m *MockRegistryQuerier) GetFullTag(reference, tag string) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFullTag", reference, tag)
	ret0, _ := ret[0].(string)
	return ret0
}

// GetFullTag indicates an expected call of GetFullTag
func (mr *MockRegistryQuerierMockRecorder) GetFullTag(reference, tag interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFullTag", reflect.TypeOf((*MockRegistryQuerier)(nil).GetFullTag), reference, tag)
}
